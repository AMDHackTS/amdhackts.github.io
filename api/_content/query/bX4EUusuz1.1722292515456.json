{"_path":"/kernel/kaslr","_dir":"kernel","_draft":false,"_partial":false,"_locale":"","title":"KASLR (Memory Map)","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"kaslr-memory-map"},"children":[{"type":"text","value":"KASLR (Memory Map)"}]},{"type":"element","tag":"ellipsis","props":{"blur":"140px","left":"0px","top":"10rem","width":"50rem"},"children":[]},{"type":"element","tag":"h2","props":{"id":"whats-kaslr"},"children":[{"type":"text","value":"What's KASLR ?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"KASLR ("},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"K"}]},{"type":"text","value":"ernel "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":"ddress "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"S"}]},{"type":"text","value":"pace "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"L"}]},{"type":"text","value":"ayout "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"R"}]},{"type":"text","value":"andomization) is used for loading the kernel. It's used for security purposes.\nKASLR makes it much harder for attackers to figure out where the important objects are in memory as it's always random."}]},{"type":"element","tag":"h2","props":{"id":"whats-the-problem"},"children":[{"type":"text","value":"What's the problem ?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"del","props":{},"children":[{"type":"text","value":"Who knows ?"}]},{"type":"text","value":" There are "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"256"}]},{"type":"text","value":" different places in memory where "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"boot.efi"}]},{"type":"text","value":" will load the kernel. "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nIn real Mac devices, all 256 places are open, thus they allow the kernel to be loaded randomly in memory. "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"del","props":{},"children":[{"type":"text","value":"Here is the show..."}]},{"type":"text","value":" But, as we don't have real Mac devices, our memory maps aren't set up in a way that suits the macOS kernel, and in some cases boot.efi cannot be loaded. "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nThis error can be manifested in many ways:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Only 244/256 slide values are usable!"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Couldn't allocate runtime area"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"panic(cpu 6 caller 0xffffff801fc057ba): a freed zone element has been modified in zone kalloc.4096: expected 0x3f00116dbe8a46f6 but found 0x3f00116d00000000"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Memory map dump in OpenCore log"}]}]},{"type":"element","tag":"h2","props":{"id":"fuk-how-to-fix-this"},"children":[{"type":"element","tag":"del","props":{},"children":[{"type":"text","value":"Fu*k"}]},{"type":"text","value":" How to fix this ?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can let OpenCore to do it's job - it can analyze the memory map and attempt to pick an applicable "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"slide"}]},{"type":"text","value":" value. This is only possible if "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ProvideCustomSlide"}]},{"type":"text","value":" is enabled."}]},{"type":"element","tag":"alert","props":{"type":"info"},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"slide"}]},{"type":"text","value":" will tell "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"boot.efi"}]},{"type":"text","value":" where to load the kernel."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If that's not working, you can enable "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"DevirtualiseMmio"}]},{"type":"text","value":". That will free some regions up to make more room for the kernel to load."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"And if that's not working, "},{"type":"element","tag":"del","props":{},"children":[{"type":"text","value":"you're screwed"}]},{"type":"text","value":" you can try these:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Enable "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"AvoidRuntimeDefrag"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Enable "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"EnableSafeModeSlide"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Enable "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"RebuildAppleMemoryMap"}]}]}]},{"type":"element","tag":"h2","props":{"id":"more-fixes-bios"},"children":[{"type":"text","value":"More fixes - BIOS"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If none of those previous fixes aren't working, you should go to your BIOS and do these:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Update BIOS"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Clear CMOS"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Enable "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Above 4G Decoding"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Disable "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"CSM"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Parallel Port"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Serial Port"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Thunderbolt"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"LED Lighting"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Legacy USB"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finnaly, you can test if your machine is booting."}]},{"type":"element","tag":"h2","props":{"id":"it-isnt-wtf-here-are-some-more-fixes"},"children":[{"type":"text","value":"It isn't ? "},{"type":"element","tag":"del","props":{},"children":[{"type":"text","value":"Wtf"}]},{"type":"text","value":" Here are some more fixes"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can manually set the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"slide"}]},{"type":"text","value":" value. For this, you'll need OpenShell."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Boot "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"OpenShell.efi"}]},{"type":"text","value":" and run "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"fs0:"}]},{"type":"text","value":" then "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"memmap > memmap.txt"}]},{"type":"text","value":". Then boot into your main OS and open "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"memmap.txt"}]},{"type":"text","value":" inside the root of your USB"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In that file, you should find the largest available value within the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Start"}]},{"type":"text","value":" column. Those values are in HEX. "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nNext, you want to calculate the actual slide value. To do it, do this simple calculation:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"(slide_value - 0x100000) / 0x200000"}]},{"type":"text","value":" "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"alert","props":{"type":"warning"},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You need to replace zeros at the beggining of the HEX value with 0x"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can run that calculation on Google, it will give you the decimal value. If the result isn't round number, just add "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"+1"}]},{"type":"text","value":" to it."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nFor example, I'll use "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"00000000A3F3F000"}]},{"type":"text","value":".\nFirst, I need to replace zeros with 0x, so it will be "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"0xA3F3F000"}]},{"type":"text","value":". Then I can run the calculation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"del","props":{},"children":[{"type":"text","value":"What the fu*k the value is 1312 ?!?!?"}]},{"type":"text","value":" Yeah... "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nThis is caused by using "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Above 4G Decoding"}]},{"type":"text","value":". Those sectors can't be used. "},{"type":"element","tag":"del","props":{},"children":[{"type":"text","value":"Holy moly"}]},{"type":"text","value":". "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nYou'll have to find the small enough value. In my case, that would be "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"0000000001080000"}]},{"type":"text","value":" ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"0x1080000"}]},{"type":"text","value":"). "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nThe result for this value is "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"8"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"how-to-apply-this"},"children":[{"type":"text","value":"How to apply this ?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To apply this, go to your "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"config.plist"}]},{"type":"text","value":", find "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"boot-args"}]},{"type":"text","value":" and add "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"slide=x"}]},{"type":"text","value":". Replace "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" with calculated slide value."}]},{"type":"element","tag":"h2","props":{"id":"wow-thanks"},"children":[{"type":"text","value":"Wow, thanks"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Don't thank me, this guide is written by my personal understandings, but I learn them from "},{"type":"element","tag":"a","props":{"href":"https://dortania.github.io/OpenCore-Install-Guide/extras/kaslr-fix.html#so-what-is-kaslr","rel":["nofollow"]},"children":[{"type":"text","value":"Dortania's guide"}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"https://github.com/corpnewt","rel":["nofollow"]},"children":[{"type":"text","value":"CorpNewt"}]},{"type":"text","value":". Big thanks to them."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"whats-kaslr","depth":2,"text":"What's KASLR ?"},{"id":"whats-the-problem","depth":2,"text":"What's the problem ?"},{"id":"fuk-how-to-fix-this","depth":2,"text":"Fu*k How to fix this ?"},{"id":"more-fixes-bios","depth":2,"text":"More fixes - BIOS"},{"id":"it-isnt-wtf-here-are-some-more-fixes","depth":2,"text":"It isn't ? Wtf Here are some more fixes"},{"id":"how-to-apply-this","depth":2,"text":"How to apply this ?"},{"id":"wow-thanks","depth":2,"text":"Wow, thanks"}]}},"_type":"markdown","_id":"content:3.Kernel:8.kaslr.md","_source":"content","_file":"3.Kernel/8.kaslr.md","_stem":"3.Kernel/8.kaslr","_extension":"md"}